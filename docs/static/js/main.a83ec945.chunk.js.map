{"version":3,"sources":["components/navigation.js","header.png","components/header.js","Process.png","components/features.js","components/footer.js","components/Team.js","components/demo.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","props","id","className","type","data-toggle","data-target","href","Header","data","title","paragraph","src","graph","Features","process","Footer","Team","map","d","i","img","alt","name","job","Demo","url","App","SmoothScroll","speed","speedAsDuration","useState","landingPageData","setLandingPageData","useEffect","JsonData","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a83ec945.chunk.js","sourcesContent":["export const Navigation = (props) => {\n  return (\n    <nav id='menu' className='navbar navbar-default navbar-fixed-top'>\n      <div className='container'>\n        <div className='navbar-header'>\n          <button\n            type='button'\n            className='navbar-toggle collapsed'\n            data-toggle='collapse'\n            data-target='#bs-example-navbar-collapse-1'\n          >\n            {' '}\n            <span className='sr-only'>Toggle navigation</span>{' '}\n            <span className='icon-bar'></span>{' '}\n            <span className='icon-bar'></span>{' '}\n            <span className='icon-bar'></span>{' '}\n          </button>\n          <a className='navbar-brand page-scroll' href='#page-top'>\n            carbonet\n          </a>{' '}\n        </div>\n\n        <div\n          className='collapse navbar-collapse'\n          id='bs-example-navbar-collapse-1'\n        >\n          <ul className='nav navbar-nav navbar-right'>\n            <li>\n              <a href='#features' className='page-scroll'>\n                Features\n              </a>\n            </li>\n            <li>\n              <a href='#services' className='page-scroll'>\n                Demo\n              </a>\n            </li>\n            <li>\n              <a href='#team' className='page-scroll'>\n                Team\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/header.61f2f38b.png\";","import ParticlesBg from \"particles-bg\";\nimport graph from \"../header.png\"\nexport const Header = (props) => {\n  return (\n    <header id='header'>\n      <div className='intro'>\n        {/* <ParticlesBg type=\"circle\" bg={{zIndex: 0, position:\"absolute\", top:0}} /> */}\n        <div className='overlay'>\n          <div className='container'>\n            <div className='row'>\n              <div className='col-md-8 col-md-offset-2 intro-text'>\n                <div className=\"left\">\n                  <h1>\n                    {props.data ? props.data.title : 'Loading'}\n                    <span></span>\n                  </h1>\n                  <p>{props.data ? props.data.paragraph : 'Loading'}</p>\n                  <a\n                    href='#features'\n                    className='btn btn-custom btn-lg page-scroll'\n                  >\n                    Start Now\n                  </a>{' '}\n                  <a\n                    href='#demo'\n                    className='btn btn-custom btn-lg page-scroll'\n                  >\n                    Watch Demo\n                  </a>{' '}\n                </div>\n                <div className=\"graph\"><img src={graph} /></div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </header>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/Process.22107910.png\";","import process from \"../Process.png\"\nexport const Features = (props) => {\n  return (\n    <div id='features' className='text-center'>\n      <div className='container'>\n        <div className='col-md-10 col-md-offset-1 section-title'>\n          <h2>Features</h2>\n        </div>\n        <div className='row'>\n        <div className=\"process\"><img src={process} /></div>\n          {/* {props.data\n            ? props.data.map((d, i) => (\n                <div key={`${d.title}-${i}`} className='col-xs-6 col-md-3'>\n                  {' '}\n                  <i className={d.icon}></i>\n                  <h3>{d.title}</h3>\n                  <p>{d.text}</p>\n                </div>\n              ))\n            : 'Loading...'} */}\n\n        </div>\n      </div>\n    </div>\n  )\n}\n","export const Footer = (props) => {\n  \n  return (\n    <div>\n      <div id='footer'>\n        <div className='container text-center'>\n          <p>\n            &copy; 2022 created by Jessica Liu\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n}\n","export const Team = (props) => {\n  return (\n    <div id='team' className='text-center'>\n      <div className='container'>\n        <div className='col-md-8 col-md-offset-2 section-title'>\n          <h2>Meet the Team</h2>\n        </div>\n        <div id='row'>\n          {props.data\n            ? props.data.map((d, i) => (\n                <div key={`${d.name}-${i}`} className='col-md-3 col-sm-6 team'>\n                  <div className='thumbnail'>\n                    {' '}\n                    <img src={d.img} alt='...' className='team-img' />\n                    <div className='caption'>\n                      <h4>{d.name}</h4>\n                      <p>{d.job}</p>\n                    </div>\n                  </div>\n                </div>\n              ))\n            : 'loading'}\n        </div>\n      </div>\n    </div>\n  )\n}\n","import ReactPlayer from 'react-player'\n\nexport const Demo = (props) => {\n    return (\n        <div id='services' className='text-center'>\n        <ReactPlayer url='https://youtu.be/N_SbEswAa8A' />\n        </div>\n)}","import { useState, useEffect } from 'react'\nimport { Navigation } from './components/navigation'\nimport { Header } from './components/header'\nimport { Features } from './components/features'\n// import { About } from './components/about'\n// import { Services } from './components/services'\n// import { Gallery } from './components/gallery'\n// import { Testimonials } from './components/testimonials'\nimport { Footer } from './components/footer'\nimport JsonData from './data/data.json'\nimport SmoothScroll from 'smooth-scroll'\nimport {Team} from './components/Team';\nimport {Demo} from './components/demo';\nexport const scroll = new SmoothScroll('a[href*=\"#\"]', {\n  speed: 1000,\n  speedAsDuration: true,\n})\n\nconst App = () => {\n  const [landingPageData, setLandingPageData] = useState({})\n  useEffect(() => {\n    setLandingPageData(JsonData)\n  }, [])\n\n  return (\n    <div>\n      <Navigation />\n      <Header data={landingPageData.Header} />\n      <Features data={landingPageData.Features} />\n      <Demo/>\n      <Team data={landingPageData.Team} />\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}